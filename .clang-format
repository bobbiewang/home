---
Language:        Cpp
# public 等访问限定符顶格
AccessModifierOffset: -1
# 对齐函数形参
AlignAfterOpenBracket: Align
# 对齐连续的赋值表达式的赋值符号
AlignConsecutiveAssignments: true
# 对齐连续的赋值表达式的类型
AlignConsecutiveDeclarations: true
# 对齐换行转义符
AlignEscapedNewlines: Left
# 对齐操作符，如 +
AlignOperands:   true
# 对齐行末注释的起始位置
AlignTrailingComments: true
# 允许函数的形参另起一行
AllowAllParametersOfDeclarationOnNextLine: true
# 不允许短代码块放在一行，如 if (a) { return; }
AllowShortBlocksOnASingleLine: false
# 不允许短 case 块放在一行
AllowShortCaseLabelsOnASingleLine: false
# 允许短函数放在一行
AllowShortFunctionsOnASingleLine: All
# 允许短 if 语句放在一行
AllowShortIfStatementsOnASingleLine: true
# 允许短循环语句放在一行
AllowShortLoopsOnASingleLine: true
# 函数的返回值和函数名之间换行
AlwaysBreakAfterReturnType: TopLevelDefinitions
# 如果多行字符串太长的话，另起一行（缩进到前面）
AlwaysBreakBeforeMultilineStrings: true
# 模版的声明（template<...>）后换行
AlwaysBreakTemplateDeclarations: true
# 函数实参可以多行灵活排版
BinPackArguments: true
# 函数形参可以多行灵活排版
BinPackParameters: true
BraceWrapping:
  # class 后的括号另起一行
  AfterClass:      true
  # 控制语句后的括号在同一行
  AfterControlStatement: false
  # enum 定义后的括号在同一行
  AfterEnum:       false
  # 函数定义后的括号另起一行
  AfterFunction:   false
  # namespace 后的括号在同一行
  AfterNamespace:  false
  AfterObjCDeclaration: false
  # struct 后的括号在同一行
  AfterStruct:     false
  # union 后的括号在同一行
  AfterUnion:      false
  # catch 和前面的括号在同一行
  BeforeCatch:     false
  # else 和前面的括号在同一行
  BeforeElse:      false
  # 
  IndentBraces:    false
  # 空函数体的括号放在两行
  SplitEmptyFunction: true
  # 空 class/struct/union 的括号放在两行
  SplitEmptyRecord: true
  # 空 namespace 的括号放在两行
  SplitEmptyNamespace: true
# 二元操作符语句在二元操作符后换行
BreakBeforeBinaryOperators: None
# ？？？需要再看看
BreakBeforeBraces: Attach
# 继承表达式不换行
BreakBeforeInheritanceComma: false
# 三元操作符后换行
BreakBeforeTernaryOperators: false
# 
BreakConstructorInitializersBeforeComma: false
BreakConstructorInitializers: BeforeColon
BreakAfterJavaFieldAnnotations: false
# ？？？
BreakStringLiterals: true
# 一行允许 80 个字符
ColumnLimit:     80
# 阻止注释被格式化的特定字符串
CommentPragmas:  '^ IWYU pragma:'
# 连续的 namespace 放在不同行
CompactNamespaces: false
# 构造函数初始化列表可以多行灵活排版
ConstructorInitializerAllOnOneLineOrOnePerLine: false
# 构造函数初始化列表缩进 4 格
ConstructorInitializerIndentWidth: 4
# 表达式分为多行后，每行缩进 4 格
ContinuationIndentWidth: 4
# 使用 C++ 的 {...} 风格，{} 内没有空格
Cpp11BracedListStyle: true
# 分析文件，自动判断 * 和 & 的对齐
DerivePointerAlignment: true
# 自动分析函数参数风格，试验特性，不使用
ExperimentalAutoDetectBinPacking: false
# 自动在 namespace 结束加一条注释
FixNamespaceComments: true
# foreach 宏的列表
ForEachMacros:   
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
# Include 语句的优先级，可以用来排序
IncludeCategories: 
  - Regex:           '^<.*\.h>'
    Priority:        1
  - Regex:           '^<.*'
    Priority:        2
  - Regex:           '.*'
    Priority:        3
# ？？？
IncludeIsMainRegex: '([-_](test|unittest))?$'
# switch 和 case 对齐
IndentCaseLabels: false
# 缩进 4 格
IndentWidth:     4
# 函数返回类型和函数名在两行时，两者对齐
IndentWrappedFunctionNames: false
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
# 不保留 Block 开始的第一个空行
KeepEmptyLinesAtTheStartOfBlocks: false
# 匹配开始一个 Block 的宏
MacroBlockBegin: ''
# 匹配结束一个 Block 的宏
MacroBlockEnd:   ''
# 最多允许连续 2 行空行
MaxEmptyLinesToKeep: 2
# namespace 内不缩进
NamespaceIndentation: None
# 指针的 * 右对齐
PointerAlignment: Right
# 格式化注释
ReflowComments:  true
# 不对 Include 语句排序
SortIncludes:    false
# 不对 using 语句排序
SortUsingDeclarations: false
# C 风格的类型转换语句后不加空格
SpaceAfterCStyleCast: false
# template 和 < 之间不加空格
SpaceAfterTemplateKeyword: false
# 赋值运算符前加空格
SpaceBeforeAssignmentOperators: true
# 控制语句后的括号前加空格
SpaceBeforeParens: ControlStatements
# 空括号对之间不加空格
SpaceInEmptyParentheses: false
# 行末的注释和语句之间加两个空格
SpacesBeforeTrailingComments: 2
# <...> 内不加空格
SpacesInAngles:  false
# 多个元素的容器的表达式内加空格
SpacesInContainerLiterals: true
# C 风格的类型转换语句的括号内不加空格
SpacesInCStyleCastParentheses: false
# 圆括号内不加空格
SpacesInParentheses: false
# 方括号内不加空格
SpacesInSquareBrackets: false
Standard:        Cpp11
# 制表符缩进 4 个空格
TabWidth:        4
# 不使用制表符
UseTab:          Never
...

